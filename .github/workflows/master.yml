name: release

on:
  push:
    branches:
      - 'master'

jobs:
  maven-release:
    runs-on: ubuntu-18.04
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Unsnapshot version
        run:  mvn versions:set -DremoveSnapshot

      - id: get-version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "::set-output name=version::$VERSION"

      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,doc,chore

      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          maven_profiles: release
          gpg_private_key: ${{ secrets.gpg_private_key }}
          gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.MAVEN_USERNAME }}
          nexus_password: ${{ secrets.MAVEN_PASSWORD }}

      - name: Create Release
        id: createRelease
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          body: ${{ steps.changelog.outputs.changes }}
          draft: false
          prerelease: false
          files: |
            target/hsac-fitnesse-plugin-*.jar

  update-version:
    needs: [maven-release]
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'zulu'
      - name: Configure git
        run: |
          git config --global user.email "fhoeben-github@hsac.nl"
          git config --global user.name "GitHub Action"
      - name: Update version
        run: |
          mvn -B release:update-versions -DautoVersionSubmodules=true
          git add pom.xml
          git commit -m "Update version by GitHub action"
          git push origin master
